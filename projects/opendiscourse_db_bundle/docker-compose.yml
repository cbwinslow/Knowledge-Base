
version: "3.9"

services:
  postgres:
    image: ankane/pgvector:latest
    container_name: odb-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:${PGDATA}
      - ./db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: odb-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant:latest
    container_name: odb-qdrant
    restart: unless-stopped
    ports:
      - "${QDRANT_PORT_HTTP}:6333"
      - "${QDRANT_PORT_GRPC}:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/collections"]
      interval: 10s
      timeout: 5s
      retries: 10

  db_init:
    image: postgres:15
    container_name: odb-db-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db:/db:ro
    entrypoint: ["bash", "-lc"]
    command: >-
      "psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} -v ON_ERROR_STOP=1 
        -f /db/migrations/001_init.sql && 
        psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} -v ON_ERROR_STOP=1 -f /db/schema_postgres.sql && 
        psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} -v ON_ERROR_STOP=1 -f /db/helpers_queries.sql &&
        psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} -v ON_ERROR_STOP=1 -f /db/pgvector_setup.sql &&
        echo 'DB initialized'"

  qdrant_init:
    image: curlimages/curl:latest
    container_name: odb-qdrant-init
    depends_on:
      qdrant:
        condition: service_healthy
    environment:
      QDRANT_URL: http://qdrant:6333
    volumes:
      - ./qdrant/create_collections.sh:/create_collections.sh:ro
    entrypoint: ["bash", "/create_collections.sh"]

volumes:
  pgdata:
  qdrant_data:
